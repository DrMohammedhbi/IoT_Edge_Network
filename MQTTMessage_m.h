//
// Generated file, do not edit! Created by opp_msgtool 6.0 from MQTTMessage.msg.
//

#ifndef __MQTTMESSAGE_M_H
#define __MQTTMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class MQTTMessage;
/**
 * Class generated from <tt>MQTTMessage.msg:4</tt> by opp_msgtool.
 * <pre>
 * packet MQTTMessage extends cPacket
 * {
 *     string topic;
 *     string payload;
 *     int qos;
 *     bool retain;
 * }
 * </pre>
 */
class MQTTMessage : public ::omnetpp::cPacket
{
  protected:
    omnetpp::opp_string topic;
    omnetpp::opp_string payload;
    int qos = 0;
    bool retain = false;

  private:
    void copy(const MQTTMessage& other);

  protected:
    bool operator==(const MQTTMessage&) = delete;

  public:
    MQTTMessage(const char *name=nullptr, short kind=0);
    MQTTMessage(const MQTTMessage& other);
    virtual ~MQTTMessage();
    MQTTMessage& operator=(const MQTTMessage& other);
    virtual MQTTMessage *dup() const override {return new MQTTMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual const char * getTopic() const;
    virtual void setTopic(const char * topic);

    virtual const char * getPayload() const;
    virtual void setPayload(const char * payload);

    virtual int getQos() const;
    virtual void setQos(int qos);

    virtual bool getRetain() const;
    virtual void setRetain(bool retain);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const MQTTMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, MQTTMessage& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline MQTTMessage *fromAnyPtr(any_ptr ptr) { return check_and_cast<MQTTMessage*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __MQTTMESSAGE_M_H

